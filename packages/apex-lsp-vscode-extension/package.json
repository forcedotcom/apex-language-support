{
  "name": "apex-language-server-extension",
  "displayName": "Apex Language Server",
  "description": "VSCode extension for Apex Language Server",
  "version": "0.1.0",
  "publisher": "salesforce",
  "license": "BSD-3-Clause",
  "repository": {
    "type": "git",
    "url": "https://github.com/forcedotcom/apex-language-support.git",
    "directory": "packages/apex-lsp-vscode-extension"
  },
  "engines": {
    "vscode": "^1.75.0"
  },
  "categories": [
    "Programming Languages",
    "Linters",
    "Snippets"
  ],
  "activationEvents": [
    "*"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "languages": [
      {
        "id": "apex",
        "aliases": [
          "Apex",
          "APEX"
        ],
        "extensions": [
          ".cls",
          ".trigger"
        ],
        "configuration": "./language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "apex",
        "scopeName": "source.apex",
        "path": "./syntaxes/apex.tmLanguage.json"
      }
    ],
    "configuration": {
      "title": "Apex",
      "properties": {
        "apex.enable": {
          "type": "boolean",
          "default": true,
          "description": "Enable Apex language server"
        },
        "apex.trace.server": {
          "type": "string",
          "enum": [
            "off",
            "messages",
            "verbose"
          ],
          "default": "off",
          "description": "Traces the communication between VS Code and the Apex language server"
        },
        "apex.debug": {
          "type": "boolean",
          "default": false,
          "description": "Run Apex language server in debug mode"
        },
        "apex.debugPort": {
          "type": "number",
          "default": 0,
          "description": "Port to use for debugging (0 for random port)"
        }
      }
    },
    "commands": [
      {
        "command": "apex.restart.server",
        "title": "Restart Apex Language Server"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run build",
    "package": "vsce package",
    "build": "wireit",
    "dev": "wireit",
    "lint": "eslint src --ext ts --rule 'import/order: off' --rule '@typescript-eslint/no-unused-vars: [error, {argsIgnorePattern: \"^_\"}]'",
    "test": "wireit",
    "test:coverage": "wireit",
    "clean": "rimraf dist",
    "clean:coverage": "rimraf coverage"
  },
  "dependencies": {
    "@salesforce/apex-lsp-node": "1.0.0",
    "vscode-languageclient": "^9.0.1"
  },
  "devDependencies": {
    "@rollup/plugin-typescript": "^11.1.5",
    "@types/glob": "^7.2.0",
    "@types/jest": "^29.5.0",
    "@types/mocha": "^9.1.1",
    "@types/node": "^18.15.11",
    "@types/vscode": "^1.75.0",
    "@typescript-eslint/eslint-plugin": "^5.30.0",
    "@typescript-eslint/parser": "^8.32.0",
    "@vscode/test-electron": "^2.1.5",
    "@vscode/vsce": "^2.15.0",
    "concurrently": "^8.2.2",
    "eslint": "^8.18.0",
    "jest": "^29.5.0",
    "rimraf": "^5.0.5",
    "typescript": "^5.8.2"
  },
  "workspaces": [
    "../apex-ls-node"
  ],
  "wireit": {
    "build": {
      "command": "tsc --build",
      "files": [
        "src/**/*.ts",
        "src/resources/**/*",
        "tsconfig.json"
      ],
      "output": [
        "dist/**"
      ]
    },
    "compile": {
      "command": "tsc --build",
      "files": [
        "src/**/*.ts",
        "tsconfig.json"
      ],
      "output": [
        "dist/**"
      ]
    },
    "dev": {
      "command": "tsc --build --watch",
      "service": true,
      "files": [
        "src/**/*.ts",
        "tsconfig.json"
      ],
      "output": [
        "dist/**"
      ]
    },
    "test": {
      "command": "jest",
      "service": false,
      "files": [
        "src/**/*.ts",
        "test/**/*.ts",
        "../../jest.config.cjs",
        "../../babel.config.cjs"
      ],
      "output": []
    },
    "test:coverage": {
      "command": "jest --coverage --coverageDirectory=./coverage",
      "service": false,
      "files": [
        "src/**/*.ts",
        "test/**/*.ts",
        "../../jest.config.cjs",
        "../../babel.config.cjs"
      ],
      "output": [
        "coverage/**"
      ]
    }
  }
}
