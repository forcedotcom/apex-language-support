{
  "name": "Apex",
  "scopeName": "source.apex",
  "fileTypes": ["cls", "trigger"],
  "patterns": [
    { "include": "#comments" },
    { "include": "#annotations" },
    { "include": "#keywords" },
    { "include": "#strings" },
    { "include": "#constants" },
    { "include": "#storage-modifiers" },
    { "include": "#classes" },
    { "include": "#methods" },
    { "include": "#apex-specific" }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.block.apex",
          "begin": "/\\*",
          "end": "\\*/",
          "captures": {
            "0": { "name": "punctuation.definition.comment.apex" }
          }
        },
        {
          "name": "comment.block.documentation.apex",
          "begin": "/\\*\\*",
          "end": "\\*/",
          "captures": {
            "0": { "name": "punctuation.definition.comment.apex" }
          }
        },
        {
          "name": "comment.line.double-slash.apex",
          "begin": "//",
          "end": "$",
          "captures": {
            "0": { "name": "punctuation.definition.comment.apex" }
          }
        }
      ]
    },
    "annotations": {
      "patterns": [
        {
          "name": "meta.declaration.annotation.apex",
          "begin": "@[A-Za-z][A-Za-z0-9_]*",
          "end": "(?=\\s|\\(|$)",
          "beginCaptures": {
            "0": { "name": "storage.type.annotation.apex" }
          }
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.apex",
          "match": "\\b(if|else|while|for|do|break|continue|return|try|catch|finally|throw|instanceof|new|switch|case|default)\\b"
        },
        {
          "name": "keyword.operator.apex",
          "match": "==|!=|<=|>=|<|>|&&|\\|\\||!|\\?|:|\\+\\+|--|\\+=|-=|\\*=|/=|%=|&=|\\|=|\\^=|>>>=|>>=|<<=|\\+|-|\\*|/|%|&|\\||\\^|~|<<|>>|>>>|\\."
        },
        {
          "name": "keyword.other.apex",
          "match": "\\b(global|public|protected|private|abstract|virtual|override|static|final|transient|webservice|testmethod|with sharing|without sharing|inherited sharing)\\b"
        },
        {
          "name": "storage.type.apex",
          "match": "\\b(void|boolean|byte|char|short|int|long|float|double|String|Integer|Boolean|Date|Datetime|Decimal|ID|Time|Object|List|Set|Map|SObject)\\b"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.single.apex",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape.apex",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.quoted.double.apex",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.apex",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "constants": {
      "patterns": [
        {
          "name": "constant.language.apex",
          "match": "\\b(true|false|null)\\b"
        },
        {
          "name": "constant.numeric.apex",
          "match": "\\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))((e|E)(\\+|-)?[0-9]+)?)(L|l|F|f)?\\b"
        }
      ]
    },
    "storage-modifiers": {
      "name": "storage.modifier.apex",
      "match": "\\b(global|public|protected|private|abstract|virtual|override|static|final|transient|webservice|testmethod)\\b"
    },
    "classes": {
      "patterns": [
        {
          "match": "\\b(class|interface|enum|trigger)\\s+([A-Za-z_][A-Za-z0-9_]*)\\b",
          "captures": {
            "1": { "name": "storage.type.apex" },
            "2": { "name": "entity.name.type.class.apex" }
          }
        },
        {
          "match": "\\b(extends|implements)\\s+([A-Za-z_][A-Za-z0-9_.]*)\\b",
          "captures": {
            "1": { "name": "keyword.other.apex" },
            "2": { "name": "entity.other.inherited-class.apex" }
          }
        }
      ]
    },
    "methods": {
      "patterns": [
        {
          "name": "meta.method.apex",
          "begin": "\\b([A-Za-z_][A-Za-z0-9_]*)\\s*\\(",
          "end": "\\)",
          "beginCaptures": {
            "1": { "name": "entity.name.function.apex" }
          }
        }
      ]
    },
    "apex-specific": {
      "patterns": [
        {
          "name": "keyword.other.soql.apex",
          "match": "\\b(SELECT|FROM|WHERE|WITH|GROUP BY|HAVING|ORDER BY|LIMIT|OFFSET|FOR VIEW|FOR REFERENCE|UPDATE|TRACKING|VIEWSTAT|BIND|ROLLBACK|SAVEPOINT|ALL ROWS|FOR UPDATE|SYSTEM_MODE|USER_MODE)\\b"
        },
        {
          "name": "keyword.other.dml.apex",
          "match": "\\b(insert|update|upsert|delete|undelete|merge)\\b"
        },
        {
          "name": "keyword.other.trigger.apex",
          "match": "\\b(before|after|insert|update|delete|undelete|Trigger\\.new|Trigger\\.old|Trigger\\.newMap|Trigger\\.oldMap|Trigger\\.isInsert|Trigger\\.isUpdate|Trigger\\.isDelete|Trigger\\.isUndelete|Trigger\\.isExecuting)\\b"
        },
        {
          "name": "constant.language.apex",
          "match": "\\b(System\\.|Database\\.|Schema\\.|ApexPages\\.|Test\\.|Http\\.|JSON\\.|Site\\.|Crypto\\.|EncodingUtil\\.|Url\\.|UserInfo\\.|PageReference\\.|Cookie\\.|RestContext\\.)\\w+\\b"
        }
      ]
    }
  }
}
