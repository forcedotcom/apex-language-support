name: Release NPM Packages

on:
  # push:
  #   branches: [main]
  workflow_call:
    inputs:
      branch:
        description: 'Branch to release from'
        required: false
        default: 'main'
        type: string
      packages:
        description: 'NPM packages to release'
        required: false
        default: 'none'
        type: string
      available-packages:
        description: 'Available NPM packages'
        required: false
        type: string
      dry-run:
        description: 'Run in dry-run mode (no actual publishing)'
        required: false
        default: 'false'
        type: string

  workflow_dispatch:
    inputs:
      packages:
        description: 'NPM packages to release'
        required: false
        default: 'none'
        type: choice
        options:
          - none
          - all
          - apex-lsp-shared
          - apex-parser-ast
          - apex-ls-browser
          - apex-ls-node
          - lsp-compliant-services
          - custom-services
          - apex-lsp-browser-client
          - apex-lsp-vscode-client
          - apex-lsp-testbed
      dry-run:
        description: 'Run in dry-run mode (no actual publishing)'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'

jobs:
  determine-npm-changes:
    runs-on: ubuntu-latest
    outputs:
      changed-npm-packages: ${{ steps.changes.outputs.packages }}
      selected-packages: ${{ steps.selected-packages.outputs.packages }}
      version-bump: ${{ steps.version-bump.outputs.bump }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.IDEE_GH_TOKEN }}
          fetch-depth: 0
          ref: ${{ inputs.branch || github.ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies
        uses: ./.github/actions/npm-install-with-retries

      - name: Determine changed NPM packages
        id: changes
        env:
          INPUT_BASE_BRANCH: 'main'
        run: |
          npx tsx .github/scripts/index.ts npm-change-detector

      - name: Determine selected packages
        id: selected-packages
        env:
          SELECTED_PACKAGE: ${{ github.event.inputs.packages || inputs.packages }}
          AVAILABLE_PACKAGES: ${{ inputs.available-packages }}
          CHANGED_PACKAGES: ${{ steps.changes.outputs.packages }}
        run: |
          npx tsx .github/scripts/index.ts npm-package-selector

      - name: Determine version bump type
        id: version-bump
        env:
          MATRIX_PACKAGE: 'dummy'
          VERSION_BUMP: 'auto'
          DRY_RUN: 'true'
        run: |
          npx tsx .github/scripts/index.ts npm-release-plan

  release-npm:
    needs: determine-npm-changes
    runs-on: ubuntu-latest
    if: needs.determine-npm-changes.outputs.selected-packages != ''
    strategy:
      matrix:
        package: ${{ fromJson(needs.determine-npm-changes.outputs.selected-packages) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.IDEE_GH_TOKEN }}
          fetch-depth: 0
          ref: ${{ inputs.branch || github.ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        uses: ./.github/actions/npm-install-with-retries

      - name: Display Release Plan
        if: inputs.dry-run == 'true' || github.event.inputs.dry-run == 'true'
        env:
          MATRIX_PACKAGE: ${{ matrix.package }}
          VERSION_BUMP: ${{ needs.determine-npm-changes.outputs.version-bump }}
          DRY_RUN: 'true'
        run: |
          npx tsx .github/scripts/index.ts npm-release-plan

      - name: Build package
        if: inputs.dry-run != 'true' && github.event.inputs.dry-run != 'true'
        run: |
          cd packages/${{ matrix.package }}
          npm run compile
          npm run bundle

      - name: Release to NPM
        if: inputs.dry-run != 'true' && github.event.inputs.dry-run != 'true'
        run: |
          cd packages/${{ matrix.package }}
          npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.IDEE_GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Dry Run Complete
        if: inputs.dry-run == 'true' || github.event.inputs.dry-run == 'true'
        run: |
          echo "‚úÖ NPM release dry run completed for ${{ matrix.package }}"
          echo "No actual publishing occurred."

  slack-notify:
    name: Slack Notification
    needs: [determine-npm-changes, release-npm]
    runs-on: ubuntu-latest
    if: always() && needs.release-npm.result == 'success' && (inputs.dry-run != 'true' && github.event.inputs.dry-run != 'true')
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch || github.ref }}

      - name: Get Package Details
        id: package-details
        env:
          SELECTED_PACKAGES: ${{ needs.determine-npm-changes.outputs.selected-packages }}
          VERSION_BUMP: ${{ needs.determine-npm-changes.outputs.version-bump }}
        run: |
          npx tsx .github/scripts/index.ts npm-package-details

      - name: Notify Slack
        uses: slackapi/slack-github-action@v1.22.0
        with:
          payload: |
            {
              "text": "üì¶ NPM Packages Released Successfully!",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "üì¶ NPM Packages Released Successfully!"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Repository:*\n${{ github.repository }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Branch:*\n${{ inputs.branch || github.ref_name }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Packages:*\n${{ steps.package-details.outputs.package_names }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Versions:*\n${{ steps.package-details.outputs.package_versions }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Version Bump:*\n${{ steps.package-details.outputs.version_bump }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Registry:*\nnpmjs.org"
                    }
                  ]
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Workflow Run:* <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Details>"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.IDEE_MAIN_SLACK_WEBHOOK }}

  slack-notify-failure:
    name: Slack Failure Notification
    needs: [determine-npm-changes, release-npm]
    runs-on: ubuntu-latest
    if: always() && needs.release-npm.result == 'failure' && (inputs.dry-run != 'true' && github.event.inputs.dry-run != 'true')
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch || github.ref }}

      - name: Get Package Details
        id: package-details
        env:
          SELECTED_PACKAGES: ${{ needs.determine-npm-changes.outputs.selected-packages }}
          VERSION_BUMP: ${{ needs.determine-npm-changes.outputs.version-bump }}
        run: |
          npx tsx .github/scripts/index.ts npm-package-details

      - name: Notify Slack
        uses: slackapi/slack-github-action@v1.22.0
        with:
          payload: |
            {
              "text": "‚ùå NPM Package Release Failed!",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "‚ùå NPM Package Release Failed!"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Repository:*\n${{ github.repository }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Branch:*\n${{ inputs.branch || github.ref_name }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Packages:*\n${{ steps.package-details.outputs.package_names }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Versions:*\n${{ steps.package-details.outputs.package_versions }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Version Bump:*\n${{ steps.package-details.outputs.version_bump }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Registry:*\nnpmjs.org"
                    }
                  ]
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Workflow Run:* <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Details>"
                  }
                },
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "mrkdwn",
                      "text": "Please check the workflow logs for detailed error information."
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.IDEE_MAIN_SLACK_WEBHOOK }}
