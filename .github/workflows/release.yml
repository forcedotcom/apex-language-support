name: Release

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to release from'
        required: false
        default: 'main'
        type: string
      packages:
        description: 'Packages to release'
        required: false
        default: 'all'
        type: string
      extensions:
        description: 'Extensions to release'
        required: false
        default: 'apex-lsp-vscode-extension'
        type: string
      dry-run:
        description: 'Run in dry-run mode (no actual publishing)'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'
      pre-release:
        description: 'Publish as pre-release version'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'
      version-bump:
        description: 'Version bump type (auto, patch, minor, major)'
        required: false
        default: 'auto'
        type: choice
        options:
          - auto
          - patch
          - minor
          - major
      base-branch:
        description: 'Base branch to compare against for change detection'
        required: false
        default: 'main'
        type: string
      registries:
        description: 'Registries to publish to'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - vsce
          - ovsx
  # schedule:
  #   # Nightly pre-release build at 2 AM UTC
  #   - cron: '0 2 * * *'
  # push:
  #   branches:
  #     - main
  #   paths-ignore:
  #     - '**.md'
  #     - '.github/workflows/README.md'
  #     - 'docs/**'

# Add explicit permissions for security
permissions:
  contents: write # Needed for version bumps and releases
  packages: write # Needed for publishing to registries
  actions: read

jobs:
  get-packages:
    runs-on: ubuntu-latest
    outputs:
      npm-packages: ${{ steps.packages.outputs.npm-packages }}
      extensions: ${{ steps.packages.outputs.extensions }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch || github.ref }}

      - name: Get package lists
        id: packages
        uses: ./.github/actions/get-packages

  # release-npm:
  #   needs: get-packages
  #   if: (github.event.inputs.npm-packages != 'none' && github.event.inputs.npm-packages != '') || (github.event_name == 'push' && github.ref == 'refs/heads/main') || (needs.get-packages.outputs.npm-packages != '')
  #   uses: ./.github/workflows/release-npm.yml
  #   with:
  #     branch: ${{ github.event.inputs.branch || github.ref_name }}
  #     packages: ${{ github.event.inputs.npm-packages || 'changed' }}
  #     available-packages: ${{ needs.get-packages.outputs.npm-packages }}
  #     dry-run: ${{ github.event.inputs.dry-run || 'false' }}
  #     base-branch: ${{ github.event.inputs.base-branch || 'main' }}
  #   secrets: inherit

  release-extensions:
    needs: get-packages
    if: (github.event.inputs.extensions != 'none' && github.event.inputs.extensions != '') || (github.event_name == 'push' && github.ref == 'refs/heads/main') || (needs.get-packages.outputs.extensions != '')
    uses: ./.github/workflows/release-extensions.yml
    with:
      branch: ${{ github.event.inputs.branch || github.ref_name }}
      extensions: ${{ github.event.inputs.extensions || 'changed' }}
      registries: ${{ github.event.inputs.registries || 'all' }}
      available-extensions: ${{ needs.get-packages.outputs.extensions }}
      dry-run: ${{ github.event.inputs.dry-run || 'false' }}
      pre-release: ${{ github.event.inputs.pre-release || 'false' }}
      version-bump: ${{ github.event.inputs.version-bump || 'auto' }}
      base-branch: ${{ github.event.inputs.base-branch || 'main' }}
    secrets: inherit
