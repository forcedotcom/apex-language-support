name: Release

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to release from'
        required: false
        default: 'main'
        type: string
      packages:
        description: 'NPM packages to release'
        required: false
        default: 'none'
        type: choice
        options:
          - none
          - all
          - changed
          - apex-lsp-shared
          - apex-parser-ast
          - apex-ls-browser
          - apex-ls-node
          - lsp-compliant-services
          - custom-services
          - apex-lsp-browser-client
          - apex-lsp-vscode-client
          - apex-lsp-testbed
      extensions:
        description: 'VS Code extensions to release'
        required: false
        default: 'none'
        type: choice
        options:
          - none
          - all
          - changed
          - apex-lsp-vscode-extension
          - apex-lsp-vscode-extension-web
      pre-release:
        description: 'Publish as pre-release version'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'
      version-bump:
        description: 'Version bump type (auto, patch, minor, major)'
        required: false
        default: 'auto'
        type: choice
        options:
          - auto
          - patch
          - minor
          - major
      registries:
        description: 'Registries to publish to'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - vsce
          - ovsx
      dry-run:
        description: 'Run in dry-run mode (no actual publishing)'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'

  # schedule:
  #   # Nightly pre-release build at 2 AM UTC
  #   - cron: '0 2 * * *'
  # push:
  #   branches:
  #     - main
  #   paths-ignore:
  #     - '**.md'
  #     - '.github/workflows/README.md'
  #     - 'docs/**'

# Add explicit permissions for security
permissions:
  contents: write # Needed for version bumps and releases
  packages: write # Needed for publishing to registries
  actions: read

jobs:
  get-packages:
    runs-on: ubuntu-latest
    outputs:
      npm-packages: ${{ steps.packages.outputs.packages }}
      extensions: ${{ steps.extensions.outputs.extensions }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event.inputs.branch || github.ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies
        uses: ./.github/actions/npm-install-with-retries

      - name: Get NPM packages
        id: packages
        run: |
          npx tsx .github/scripts/index.ts npm-package-selector

      - name: Get extensions
        id: extensions
        run: |
          npx tsx .github/scripts/index.ts ext-package-selector

  release-npm:
    needs: get-packages
    if: (github.event.inputs.packages != 'none' && github.event.inputs.packages != '') || (github.event_name == 'push' && github.ref == 'refs/heads/main') || (needs.get-packages.outputs.npm-packages != '')
    uses: ./.github/workflows/release-npm.yml
    with:
      branch: ${{ github.event.inputs.branch || github.ref_name }}
      packages: ${{ github.event.inputs.packages || 'changed' }}
      available-packages: ${{ needs.get-packages.outputs.npm-packages }}
      dry-run: ${{ github.event.inputs.dry-run || 'false' }}
    secrets: inherit

  release-extensions:
    needs: get-packages
    if: (github.event.inputs.extensions != 'none' && github.event.inputs.extensions != '') || (needs.get-packages.outputs.extensions != '')
    uses: ./.github/workflows/release-extensions.yml
    with:
      branch: ${{ github.event.inputs.branch || github.ref_name }}
      registries: ${{ github.event.inputs.registries || 'all' }}
      dry-run: ${{ github.event.inputs.dry-run || 'false' }}
      pre-release: ${{ github.event.inputs.pre-release || 'false' }}
      version-bump: ${{ github.event.inputs.version-bump || 'auto' }}
      extensions: ${{ github.event.inputs.extensions || 'none' }}
      available-extensions: ${{ needs.get-packages.outputs.extensions }}
    secrets: inherit
