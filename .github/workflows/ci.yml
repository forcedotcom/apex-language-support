name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

# Add explicit permissions for security
permissions:
  contents: read
  pull-requests: read
  actions: read

jobs:
  test:
    name: Test
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: ['20.x', 'lts/*', 'node']
      fail-fast: false

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        uses: ./.github/actions/npm-install-with-retries

      - name: Run linting
        run: npm run lint

      - name: Compile project
        run: npm run compile

      - name: Run tests with coverage
        run: npm run test:coverage

      - name: Merge coverage reports
        run: npm run test:coverage:report

      - name: Determine Node Label
        id: node-label
        shell: bash
        run: |
          if [ "${{ matrix.node-version }}" = "lts/*" ]; then
            echo "value=lts" >> $GITHUB_OUTPUT
          else
            echo "value=${{ matrix.node-version }}" >> $GITHUB_OUTPUT
          fi

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-${{ matrix.os }}-${{ steps.node-label.outputs.value }}
          path: ./coverage

  test-quality:
    name: Test Quality
    needs: test
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: ['20.x']
      fail-fast: false

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        uses: ./.github/actions/npm-install-with-retries

      - name: Run quality tests
        run: npm run test:quality

  package:
    name: Package
    needs: test
    if: ${{ needs.test.result == 'success' }}
    uses: ./.github/workflows/package.yml
    with:
      branch: ${{ github.head_ref || github.ref_name }}
      artifact-name: vsix-packages
      dry-run: false

  ci-complete:
    name: CI Complete
    runs-on: ubuntu-latest
    needs: [test, package]
    if: always()
    steps:
      - name: Check all jobs result
        run: |
          if [[ "${{ needs.test.result }}" != "success" ]]; then
            echo "Test job(s) failed"
            exit 1
          fi
          if [[ "${{ needs.package.result }}" != "success" ]]; then
            echo "Package job failed"
            exit 1
          fi
          echo "All jobs succeeded"

  slack-notify:
    name: CI Failed Notification
    needs: [test, package]
    runs-on: ubuntu-latest
    if: always() && github.event_name == 'push' && (needs.test.result == 'failure' || needs.package.result == 'failure')
    steps:
      - name: Notify Slack
        uses: slackapi/slack-github-action@v2.1.1
        with:
          payload: |
            {
              "text": "‚ùå CI Pipeline Failed",
              "event": "CI workflow failed, run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
              "repo": "${{ github.repository }}",
              "test_result": "${{ needs.test.result }}",
              "package_result": "${{ needs.package.result }}",
              "branch": "${{ github.ref_name }}",
              "commit": "${{ github.sha }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.IDEE_MAIN_SLACK_WEBHOOK }}
