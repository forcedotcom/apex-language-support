name: Publish in Microsoft Marketplace
on:
  workflow_call:
    inputs:
      branch:
        description: 'Branch to publish from'
        required: false
        default: 'main'
        type: string
      pre-release:
        description: 'Publish as pre-release version'
        required: false
        default: 'false'
        type: string
      dry-run:
        description: 'Run in dry-run mode (validate without publishing)'
        required: false
        default: 'false'
        type: string
      artifact-name:
        description: 'Name for the VSIX artifacts (base name or pre-calculated: vsix-packages-{run_number}-{mode})'
        required: false
        default: 'vsix-packages'
        type: string
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to publish from'
        required: true
        default: 'main'
        type: string
      pre-release:
        description: 'Publish as pre-release version'
        required: false
        default: 'false'
        type: string
      dry-run:
        description: 'Run in dry-run mode (validate without publishing)'
        required: false
        default: 'false'
        type: string
      artifact-name:
        description: 'Name for the VSIX artifacts (base name or pre-calculated: vsix-packages-{run_number}-{mode})'
        required: false
        default: 'vsix-packages'
        type: string

jobs:
  download-artifacts:
    runs-on: ubuntu-latest
    outputs:
      vsix_files: ${{ steps.download.outputs.vsix_files }}
    steps:
      - name: Download VSIX artifacts
        id: download
        uses: ./.github/actions/download-vsix-artifacts
        with:
          artifact-name: ${{ inputs.artifact-name }}

  publish:
    runs-on: ubuntu-latest
    needs: download-artifacts
    if: github.ref == 'refs/heads/main' || github.event.inputs.branch == github.ref_name || inputs.branch == github.ref_name
    strategy:
      matrix:
        vsix: ${{ fromJson(needs.download-artifacts.outputs.vsix_files) }}
    env:
      VSCE_PERSONAL_ACCESS_TOKEN: ${{ secrets.VSCE_PERSONAL_ACCESS_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.IDEE_GH_TOKEN }}
    steps:
      - name: Flexible branch match (skip job if not matching)
        run: |
          BRANCH="${GITHUB_REF}"
          INPUT_BRANCH="${{ inputs.branch }}"
          EVENT_BRANCH="${{ github.event.inputs.branch }}"
          if [[ "$BRANCH" == *"$INPUT_BRANCH" ]] || [[ "$BRANCH" == *"$EVENT_BRANCH" ]]; then
            echo "Branch matches, continuing."
          else
            echo "Branch does not match, skipping job."
            exit 0
          fi

      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.IDEE_GH_TOKEN }}
          ref: ${{ github.event.inputs.branch || inputs.branch || github.ref }}

      - name: Publish to VS Code Marketplace
        uses: ./.github/actions/publish-vsix
        with:
          vsix-path: ${{ matrix.vsix }}
          publish-tool: vsce
          pat-secret: ${{ secrets.VSCE_PERSONAL_ACCESS_TOKEN }}
          marketplace-name: VSCode Marketplace
          pre-release: ${{ inputs.pre-release }}
          dry-run: ${{ inputs.dry-run }}
