name: Publish in Microsoft Marketplace
on:
  workflow_call:
    inputs:
      branch:
        description: 'Branch to publish from'
        required: false
        default: 'main'
        type: string
      pre-release:
        description: 'Publish as pre-release version'
        required: false
        default: false
        type: boolean
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to publish from'
        required: true
        default: 'main'
        type: string
      pre-release:
        description: 'Publish as pre-release version'
        required: false
        default: false
        type: boolean

jobs:
  package:
    uses: ./.github/workflows/package.yml
    with:
      branch: ${{ inputs.branch || github.ref_name }}

  publish:
    needs: package
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.event.inputs.branch == github.ref_name || inputs.branch == github.ref_name
    env:
      VSCE_PERSONAL_ACCESS_TOKEN: ${{ secrets.VSCE_PERSONAL_ACCESS_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.IDEE_GH_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.IDEE_GH_TOKEN }}
          ref: ${{ github.event.inputs.branch || inputs.branch || github.ref }}

      - name: Download VSIX artifacts
        uses: actions/download-artifact@v4
        with:
          name: vsix-packages
          path: ./vsix-artifacts

      - name: Publish to VS Code Marketplace
        run: |
          # Get the package version from package.json
          PACKAGE_VERSION=$(node -p "require('./packages/apex-lsp-vscode-extension/package.json').version")
          echo "Looking for desktop extension version: $PACKAGE_VERSION"

          # Find the VSIX file matching the package version
          VSIX_PATH=$(find ./vsix-artifacts -name "*apex-language-server-extension-${PACKAGE_VERSION}.vsix" | head -1)
          if [ -z "$VSIX_PATH" ]; then
            echo "Desktop extension VSIX file for version $PACKAGE_VERSION not found in artifacts."
            echo "Available VSIX files:"
            find ./vsix-artifacts -name "*.vsix" | sort
            exit 1
          fi
          echo "Publishing VSIX: $VSIX_PATH"
          node .github/scripts/publish-vsix.js $(dirname "$VSIX_PATH")
        env:
          VSCE_PERSONAL_ACCESS_TOKEN: ${{ secrets.VSCE_TOKEN }}
          PRE_RELEASE: ${{ inputs.pre-release || github.event.inputs.pre-release || false }}
